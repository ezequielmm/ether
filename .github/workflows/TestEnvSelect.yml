on: workflow_dispatch

jobs:
  selectEnvName:
    name: Select Name based on branch
    runs-on: ubuntu-latest
    outputs:
      deploy_env: ${{ steps.branch_check.outputs.env_name }}
    steps:
      - id: branch-check
        run: |
          if [ "${{ github.ref }}" == "refs/heads/releases/dev" ]; then
            echo "Develop Selected"
            echo "deploy_env=develop" >> $GITHUB_OUTPUT
          elif [ "${{ github.ref }}" == "refs/heads/releases/stage" ]; then
            echo "Stage Selected"
            echo "deploy_env=stage" >> $GITHUB_OUTPUT
          elif [ "${{ github.ref }}" == "refs/heads/releases/alpha" ]; then
            echo "Alpha Selected"
            echo "deploy_env=alpha" >> $GITHUB_OUTPUT
          else
            echo "Else Fired, Manual run of workflow goes to develop"
            echo "deploy_env=develop" >> $GITHUB_OUTPUT
          fi

  displayEnvName:
    name: Display Environment Name
    runs-on: ubuntu-latest
    needs: selectEnvName
    steps:
      - run: echo echo "I got ${{ needs.selectEnvName.outputs.deploy_env }}"
    
  job1:
    runs-on: ubuntu-latest
    # Map a step output to a job output
    outputs:
      output1: ${{ steps.step1.outputs.test }}
      output2: ${{ steps.step2.outputs.test }}
    steps:
      - id: step1
        run: echo "test=hello" >> $GITHUB_OUTPUT
      - id: step2
        run: echo "test=world" >> $GITHUB_OUTPUT
  job2:
    runs-on: ubuntu-latest
    needs: job1
    steps:
      - run: echo ${{needs.job1.outputs.output1}} ${{needs.job1.outputs.output2}}