on: 
  workflow_dispatch:
  push:
    branches:
    - 'releases/dev'
  
jobs:
  Cache:
    name: Checkout and Cache
    runs-on: ubuntu-latest
    steps:
      #Checkout
      - name: Checkout Repositiory
        uses: actions/checkout@v2

      # Git LFS
      - name: Create LFS file list
        run: git lfs ls-files -l | cut -d' ' -f1 | sort > .lfs-assets-id

      - name: Restore LFS Cache
        uses: actions/cache@v2
        id: lfs-cache
        with:
          path: .git/lfs
          key: ${{ runner.os }}-lfs-@{{ hashFiles('.lfs-assets-id') }}

      - name: Git LFS Pull
        run: |
          git lfs pull
          git add .
          git reset --hard

      # Cache
      - uses: actions/cache@v2
        with:
          path: Library
          key: Library-${{ hashFiles('Assets/**', 'Packages/**', 'ProjectSettings/**') }}
          restore-keys: |
            Library-

  testRunner:
    name: Run all tests
    runs-on: ubuntu-latest
    steps:

      # Test
      - name: Run tests
        uses: game-ci/unity-test-runner@v2
        env: 
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
        with:
          githubToken: ${{ secrets.GITHUB_TOKEN }}

  build:
    name: Build Project
    runs-on: ubuntu-latest
    # needs: testRunner
    steps:

      # Build Project
      - name: Build
        uses: game-ci/unity-builder@v2
        env: 
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          targetPlatform: WebGL

      # Output
      - uses: actions/upload-artifact@v2
        with:
          name: Build
          path: /var/build
  
  deploy:
    name: Deploy to dev
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Download WebGL Artifact
      uses: actions/download-artifact@v2
      with:
        name: Build
        path: /var/build

    - name: Deploy to server
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        key : ${{ secrets.SSH_PRIV_KEY }}
        source: "/var/build"
        target: "/home/forge/client.dev.kote.robotseamonster.com/testBuild"
        overwrite: true